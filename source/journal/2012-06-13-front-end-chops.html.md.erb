---
title: Front end chops
tags: CSS, JavaScript
---

The role of the front-end web developer has become more important, more complicated yet simpler in many ways.

READMORE

This post is a response to [@rmurphey's](https://twitter.com/rmurphey) brilliant [A Baseline for Front-End Developers](http://rmurphey.com/blog/2012/04/12/a-baseline-for-front-end-developers) article.

The role of the front-end developer has become more complicated with the tooling and experience we are expected to have under our belts, it's also become easier in a lot of ways though.

## More important
JavaScript has grown up, left home, and is out taking on the world.  It is [the most popular language on github](https://github.com/languages/) and is continually taking processing off the server and moving it to the client, this trend will continue.
HTML5 has promoted web tech to another level of interactivity and power.
CSS3 has enabled designers to implement effect and animations that previously required a lot of complex scripting or flash.
Mobile devices have come out with great web browsers like Mobile Safari, Opera, Chrome and Firefox.
Frameworks like PhoneGap have enabled web apps to power installed apps on all the major platforms.
The web as a platform is kicking ass - an enthusistic crowd of designers/developers are building it daily, contributing to each others work. The web is deployable everywhere, future proof, cheap to build, and more powerful than ever.

## More complicated
If you read Rebecca's article you might feel overwhelmed at the level of things you need to learn, so lets simplify it - HTML, CSS & JavaScript is what's important.  Know those and you can develop for the web.

Tools have complicated things though, there is now an ever present learning curve before us.  If you join a new team or project you will probably be expected to learn a handful of unfamiliar tools that the team has adopted, you'd also do well to be able to offer a handful of your own practices/tools/frameworks that you like.  Tooling is really highly valued at the moment.

I'm a keen learner but a late adopter, I don't jump from one hot thing to the next.
If you always adopt the hot new thing, you will often be adopting more code and complexity, the key is to find tools that require less code and complexity and allow you to do more.

The JavaScript scene at the moment is very much the wild west.  It seems only yesterday that people actually cared what happened when javascript was disabled in the browser.  There is no one right way to build front-end web applications, my advice is to keep it as simple as possible and write as little code as you can get away with.

## Yet Simpler
Browsers are great now, IE is dying.
Web standards have won and it's now easier to develop for the web.
CSS3 means that there's a lot of power and visual reward for a small amount of effort / code.
While there's more to learn, a lot of libraries allow you to go further and do more.

The best tools save you time and allow you to write better, more elegant and maintainable code.
